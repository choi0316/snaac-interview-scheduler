[tool:pytest]
# pytest 설정 파일
# 면접 스케줄링 시스템용 테스트 설정

# 테스트 파일 및 디렉토리 패턴
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# 출력 설정
addopts = 
    -v
    --strict-markers
    --strict-config
    --tb=short
    --durations=10
    --durations-min=1.0

# 마커 정의
markers =
    slow: 실행 시간이 오래 걸리는 테스트
    integration: 통합 테스트 (여러 모듈 조합)
    performance: 성능 테스트 (속도, 메모리 사용량 등)
    korean: 한국어 텍스트 처리 테스트
    pdf: PDF 처리 관련 테스트
    excel: Excel 생성 관련 테스트
    email: 이메일 검증/템플릿 관련 테스트
    gui: GUI 인터페이스 관련 테스트
    unit: 단위 테스트
    smoke: 스모크 테스트 (기본 동작 확인)

# 경고 필터링
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*Using or importing the ABCs.*:DeprecationWarning

# 최소 Python 버전
minversion = 3.8

# 테스트 검색 패턴
testname_prefix = test_

# 로그 설정
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# 파일 로그 설정
log_file = tests/test.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d - %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# 자동 로깅 비활성화
log_auto_indent = true

# 테스트 실행 시간 제한 (초)
timeout = 300

# 병렬 테스트 실행 설정
# pytest-xdist 플러그인 사용 시
# -n auto 또는 -n 4 등으로 실행

# 커버리지 설정 (pytest-cov 플러그인)
# --cov 옵션으로 실행 시 적용
[coverage:run]
source = core, excel, email, gui
omit = 
    tests/*
    */__init__.py
    */conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# HTML 커버리지 리포트 설정
[coverage:html]
directory = htmlcov
title = 면접 스케줄링 시스템 코드 커버리지